<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>后端求职面试 on J.Q.HUO</title>
    <link>https://tgreenvand.github.io/tags/%E5%90%8E%E7%AB%AF%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 后端求职面试 on J.Q.HUO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Aug 2021 22:30:37 +0100</lastBuildDate>
    
	<atom:link href="https://tgreenvand.github.io/tags/%E5%90%8E%E7%AB%AF%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>我的2022秋招</title>
      <link>https://tgreenvand.github.io/post/jobinterviewin2020/</link>
      <pubDate>Tue, 17 Aug 2021 22:30:37 +0100</pubDate>
      
      <guid>https://tgreenvand.github.io/post/jobinterviewin2020/</guid>
      <description>对于我而言，我的秋招过程就是一个不断经历失败，同时也不断突破自我的过程。很庆幸，不论是出于兴趣，还是盲目跟风，我最终选择了走CS这条路，这是一个需要和计算机进行沟通，更需要和自己进行沟通的领域。也希望自己在这趟旅程中尽可能说服自己，求一个念头通达，圆融如意。
 让我们回到现实
截至目前，总共经历16场面试，面试通过14场，失败2场。以下是目前我面过的公司的面经，由于个人项目的部分因人而异，这里只列出普适性的问题
字节跳动—国际化电商后端 一面（pass）  详细解释一下mysql事务ACID特性？ mysql怎么实现持久化的？数据库宕机怎么进行数据恢复？ 什么是mysql的MVCC？MVCC怎么实现的？ 详细讲一下TCP4次挥手，3次握手？为什么要4次挥手？ 客户端断开连接的过程 用过哪些shell命令？题目：如何统计访问日志的“99”线，写命令实现 进程和线程的区别？如果一个进程中的线程过多会出现什么情况 进程和线程的上下文切换对比 算法题：给定一个链表，奇数位升序排列，偶数位降序排列，要求输出一个全局升序排列的链表  二面（fail）  HTTP和HTTPS的区别，什么是对称加密和非对称加密 对称加密和非对称加密有什么优缺点，分别应用在什么场景 mysql有哪些锁，意向锁有什么作用 mysql事务有哪些隔离级别，分别解决了什么现象 redis缓存机制，什么是缓存雪崩、缓存穿透、缓存击穿，分别怎么解决 算法题：输出最小字典序的最长递增子序列  阿里云智能信息事业部&amp;ndash;后端开发 一面（pass）  用户从url输入到后端返回经历哪些过程（主要考察后端架构的理解）？ 分发逻辑怎么实现的？看没看过源码？能怎么改进？主要难题是什么？ mysql主从架构 mysql有哪些引擎，innodb的新特性 mysql的事务特性，mysql的redolog的作用 mysql锁机制，讲的越详细越好 什么是回表？ 用过哪些shell命令？sed和awk用过吗？ 听说过nosql吗？有没有用过离线分析的数据库？ 算法题   反转链表     求数据流中第K大的元素     给定范围0&amp;lt;a&amp;lt;10^18的整数，求不包含0-9某个数字且小于a的数字个数    二面（pass）  你理解的后端和算法的区别是什么 自己的职业规划？ redis怎么保证缓存和数据库的一致性 mysql 慢查询怎么优化？ 联合索引(A,B,C)索引的顺序影响mysql的性能吗 1亿的数据量放在线上mysql库中可能出现的问题是什么？怎么解决？（分库分表）  滴滴广告业务部go后端开发 一面（pass）  100个进程同时执行update t set k = k+1 where id = 1 会发生什么情况（回答了写锁等待，然后被追问依据是什么，回答了update当前读机制如果没有锁等待会导致数据不一致的问题） 如果100个请求同时更新呢，在redis中会出现什么情况 查看cpu占用信息的命令？查看内存占用信息的命令？ 算法题  求两个字符串数字的差 给定一个数组，O(n)时间O(1)空间地将数组中的0元素移动到末尾，并保证数组中元素的相对顺序 给定一组硬币面值可重复使用，求出凑齐k元的硬币最小数量 两数之和    二面（pass）  自我介绍+毕业时间+印象最深的项目+项目细节盘问 算法题：螺旋打印矩阵中的元素  三面（pass）  自我介绍+项目介绍（这一面盘把所有实习经历都盘问了一遍，要求讲自己一天的工作流程，举一个开发例子，尽可能细节）  HR面（pass）  最有成就感的事情 实习经历最大的收获 实习期间遇到的困难怎么解决  知乎golang后端开发 一面(pass)  少量的key值要在后端进行过滤，如何设计才能保证后端数据库不被不存在的key攻击？ 少量的key值要进行redis存储，用什么数据结构？ 大量的key在后端存储，如何设计才能不被攻击？（bitmap，布隆过滤器） mysql索引机制，为什么使用B+树进行存储？为什么不用二叉树，为什么不用B树 为什么使用自增id作为主键 mysql事务的隔离级别有哪些？分别解决了什么问题 python 的super机制，装饰器 对HTTP无状态怎么理解的，Cookie机制的流程，服务器怎么存储cookie的 负载均衡的场景，怎么应对一台机器上保存了cookie而请求被转发到其他的机器上（请求固定转发，负载均衡端保存全局cookie） 大量用户id和电话号码，一个频繁请求的场景，如何设计索引（电话号+uid组合索引，覆盖索引机制） 操作系统，IO多路复用，对select/epoll的理解 算法题：打印二叉树每层最小的节点值  百度&amp;ndash;go后端开发 一面（fail）  url输入到展现过程？ mysql题目：给定一个表统计pv、uv shell题目：统计文件中出现次数最多的10个ip 进程和线程的区别，堆栈的区别 算法题：快速排序  百度&amp;ndash;搜索平台研发部go后端开发 一面（pass）  mysql最左原则是什么、事务介绍，ACID四个特性分别怎么实现（越详细越好） 介绍一下mysql的锁机制 给定一个学生选课表，统计每个学生的选课门数，写一个sql语句 TCP怎么保持稳定性，TCP拥塞控制算法介绍（越详细越好），close_wait数量太多怎么解决 怎么通过命令查询进程监听的端口号 select/epoll模型的理解 哈希表如何处理冲突，红黑树了解到什么程度 介绍一下常用排序算法以及应用场景 TopK问题怎么解决 算法题：leetcode电话号码的字母组合  二面(pass) bilibili&amp;ndash;流媒体算法工程师 一面（pass）  对机器学习算法了解到什么程度，过往的算法项目做到什么程度 算法题：  最长上升子序列（贪心+二分查找） 用栈实现队列   TCP和UDP的区别，TCP可靠性是怎么实现的，为什么UDP不可靠 如果想要UDP也可靠的话应该怎么实现 进程和线程的区别、进程之间的通信方式 常用的数据结构了解哪些 智力题  128个队伍进行淘汰赛，总共需要两两进行多少场比赛 3L和5L的桶，装出4L的水如何操作    二面() 好未来—服务端go开发工程师 一面（pass）  mysql分库分表了解吗，当时的公司的mysql库的架构是什么 mysql事务的ACID四个特性怎么实现的，mysql的redolog是什么，有什么作用 mysql的MVCC是怎么实现的 mysql有哪些隔离级别，脏读不可重复读幻读分别是怎么解决的 mysql的锁有哪些，什么是next-key lock，怎么加读写锁（语法层面） mysql聚簇索引和非聚簇索引，为什么mysql用B+树，为什么不用哈希表和二叉树 mysql在非聚簇索引上查询数据的过程（回表，多一次磁盘访问操作） 缓存穿透、缓存雪崩怎么解决（这里缓存穿透提出了永久驻留数据，面试官给出了代码层面的解决方案） redis是单线程、单进程、单进程多线程还是多进程多线程？为什么是单线程设计？还有没有其他的线程/进程了？ redis rdb日志创建过程，什么是写时复制，为什么要fork子进程，为什么不fork子线程 创建rdb日志的时候如果fork子进程，会存在数据冲突吗（操作系统层面解决了这个问题） 小内存大数据文件怎么排序，小内存大数据文件TopK问题（最小堆） 算法题：实现堆的插入操作  二面（pass） 3道系统设计题</description>
    </item>
    
  </channel>
</rss>